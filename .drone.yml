---
kind: pipeline
type: docker
name: default
concurrency:
  limit: 4 # Limit concurrent pipelines

trigger:
  event:
    exclude:
      - pull_request

steps:
  - name: postgres
    image: postgres:9.5
    detach: true
    environment:
      POSTGRES_USER: lego
      POSTGRES_HOST_AUTH_METHOD: trust
    when:
      event: [push]
      branch:
        exclude: [ build ]

  - name: minio
    image: minio/minio
    detach: true
    environment:
      MINIO_ACCESS_KEY: lego-dev
      MINIO_SECRET_KEY: lego-dev
    commands:
      - /usr/bin/docker-entrypoint.sh server /export
    when:
      event: [push]
      branch:
        exclude: [ build ]

  - name: thumbor
    image: apsl/thumbor:latest
    detach: true
    environment:
      SECURITY_KEY: 'lego-dev'
      MAX_WIDTH: '1000'
      MAX_HEIGHT: '800'
      QUALITY: '98'
      ALLOW_UNSAFE_URL: '0'
      ALLOW_OLD_URLS: '0'
      AWS_ACCESS_KEY_ID: 'lego-dev'
      AWS_SECRET_ACCESS_KEY: 'lego-dev'
      TC_AWS_LOADER_BUCKET: lego
      TC_AWS_REGION: us-east-1
      TC_AWS_ENDPOINT: '"http://minio:9000"'
      LOADER: tc_aws.loaders.s3_loader
    links:
      - minio
    when:
      event: [push]
      branch:
        exclude: [ build ]

  - name: redis
    image: redis
    detach: true
    when:
      event: [push]
      branch:
        exclude: [ build ]

  - name: api
    image: registry.webkom.dev/webkom/lego:latest
    detach: true
    pull: true
    commands:
      - ./wait-for-it.sh -t 60 postgres:5432
      - ./wait-for-it.sh -t 60 redis:6379
      - ./wait-for-it.sh -t 60 minio:9000
      - ./wait-for-it.sh -t 60 thumbor:8000
      - cd /app
      - python manage.py reset_db --noinput
      - python manage.py migrate
      - python manage.py migrate_search
      - python manage.py load_fixtures --development
      - python manage.py rebuild_index
      - python manage.py runserver 0.0.0.0:8000
    environment:
      PORT: '8000'
      ALLOWED_HOSTS: '*,'
      DATABASE_URL: 'postgres://lego@postgres:5432/lego'
      SECRET_KEY: 'abc123'
      SERVER_URL: 'http://api:8000'
      FRONTEND_URL: 'http://ssr:3000'
      CACHE_URL: 'rediscache://redis/0?client_class: django_redis.client.DefaultClient'
      EMAIL_URL: 'smtp://localhost'
      AWS_ACCESS_KEY_ID: 'lego-dev'
      AWS_SECRET_ACCESS_KEY: 'lego-dev'
      AWS_REGION: 'us-east-1'
      AWS_S3_BUCKET: 'lego'
      AWS_ENTRYPOINT: 'http://minio:9000'
      THUMBOR_SERVER: 'http://thumbor:8000'
      THUMBOR_SECURITY_KEY: 'lego-dev'
      SENTRY: 'http://sentry:sentry@localhost/2'
      CELERY_BROKER_URL: 'redis://redis/1'
      CHANNELS_REDIS_URL: 'redis://redis/2'
      STRIPE_API_KEY: '123'
      STRIPE_WEBHOOK_SECRET: '123'
      CAPTCHA_KEY: '123'
      LDAP_SERVER: 'localhost'
      LDAP_USER: '123'
      LDAP_PASSWORD: '123'
      APNS_CERTIFICATE: '123'
      SEARCH_BACKEND: 'postgres'
      ELASTICSEARCH_HOST: 'ignored'
      CORS_ORIGIN_DOMAINS: 'ssr:3000'
    when:
      event: [push]
      branch:
        exclude: [ build ]

  - name: legocypresshelper
    image: abakus/lego-cypress-helper:latest
    detach: true
    pull: true
    when:
      event: [push]
      branch:
        exclude: [ build ]
    environment:
      PG_HOST: postgres
      PG_USERNAME: lego
      PG_DATABASE: lego
    commands:
      - cd /app
      - ./wait-for-it.sh -t 420 api:8000
      - node index.js
      - echo "server stopped"

  - name: setup
    image: node:14-alpine
    when:
      event: [push]
    depends_on:
      - postgres
      - minio
      - thumbor
      - redis
      - api
    volumes:
      - name: yarn_cache
        path: /tmp/cache
    environment:
      CYPRESS_INSTALL_BINARY: 0
    commands:
      - yarn --frozen-lockfile --cache-folder /tmp/cache

  - name: build_server
    image: node:14-alpine
    when:
      event: [push]
      branch:
        exclude: [ build ]
    depends_on:
      - setup
    commands:
      - yarn build:server

  - name: build_client
    image: node:14-alpine
    when:
      event: [push]
      branch:
        exclude: [ build ]
    depends_on:
      - setup
    commands:
      - yarn build:client

  - name: test
    image: node:14-alpine
    when:
      event: [push]
    depends_on:
      - setup
    commands:
      - yarn test

  - name: lint
    image: node:14-alpine
    when:
      event: [push]
    depends_on:
      - setup
    commands:
      - yarn lint

  - name: flow
    image: node:14-slim
    when:
      event: [push]
    depends_on:
      - setup
    commands:
      - yarn flow --quiet

  - name: install_cypress
    image: node:14-alpine
    when:
      event: [push]
      branch:
        exclude: [ build ]
    depends_on:
      - setup
    environment:
      CYPRESS_CACHE_FOLDER: /drone/src/.cypress_cache
    commands:
      - yarn cypress install

  - name: ssr
    image: node:14-alpine
    detach: true
    when:
      event: [push]
      branch:
        exclude: [ build ]
    depends_on:
      - build_client
      - build_server
    environment:
      API_URL: http://api:8000/api/v1
      BASE_URL: http://api:8000
      WS_URL: ws://api:8000
      ENVIRONMENT: ci
    commands:
      - yarn ssr

  - name: cypress
    image: cypress/browsers:node14.16.0-chrome89-ff86
    shm_size: 512m
    ipc: host
    when:
      event: [push]
      branch:
        exclude: [ build ]
    depends_on:
      - legocypresshelper
      - install_cypress
      - ssr
    environment:
      CYPRESS_API_BASE_URL: http://api:8000
      CYPRESS_RESET_DB_API: http://legocypresshelper:3030
      CYPRESS_BASE_URL: http://ssr:3000
      CYPRESS_CACHE_FOLDER: /drone/src/.cypress_cache
      CYPRESS_RECORD_KEY:
        from_secret: cypress_record_key
    commands:
      - ./wait-for-it.sh -t 180 ssr:3000
      - ./wait-for-it.sh -t 180 legocypresshelper:3030
      - yarn cypress run --record

  - name: docker
    image: plugins/docker
    when:
      branch:
        - build
      event: push
      status: success
    depends_on:
      - build_server
      - build_client
      - test
      - lint
      - flow
      - ssr
      - cypress
    environment:
      SENTRY_AUTH_TOKEN:
        from_secret: sentry_auth_token
    settings:
      registry: https://registry.webkom.dev
      repo: registry.webkom.dev/webkom/lego-webapp
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      tags:
        - version-${DRONE_COMMIT_SHA:0:7}
        - latest
      build_args:
        - RELEASE=version-${DRONE_COMMIT_SHA:0:7}
        - COMMIT_SHA=${DRONE_COMMIT_SHA}
        - SENTRY_ORG=abakus
        - SENTRY_PROJECT=lego-webapp
        - SENTRY_URL=https://sentry.io/
      build_args_from_env:
        - SENTRY_AUTH_TOKEN

  - name: Deploy
    image: abakus/ansible-deploy
    settings:
      playbook: /infrastructure/lego/playbooks/deploy.yml
      repository:
        from_secret: infra_repository
      tags:
        - webapp
      limit: ${DRONE_DEPLOY_TO}
      extra_vars: webapp_version=version-${DRONE_COMMIT_SHA:0:7}
      inventory: /infrastructure/inventory
      vault_password:
        from_secret: ansible_vault_password
      private_key:
        from_secret: infra_deploy_key
    when:
      event:
        - promote
        - rollback
      branch:
        - build

volumes:
  - name: yarn_cache
    host:
      path: /tmp/drone-cache/yarn

image_pull_secrets:
  - dockerconfigjson

---
kind: signature
hmac: 220fa3dae4716f4c9359230f77838148d6427e56d47a89d220e5f546df86cc4d
