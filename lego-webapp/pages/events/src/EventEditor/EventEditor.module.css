@import url('styles/custom-media.css');
@import url('../../index/Event.module.css');

.editorSectionToggle {
  position: sticky;
  top: 0;
  background-color: var(--lego-card-color);
  z-index: 5;
  box-shadow: var(--shadow-bottom-md);
  cursor: default;
}

.toggleIcon {
  transition: var(--easing-medium);
}

.toggleIcon.expanded {
  transform: rotate(90deg);
}

.editorSectionToggle.collapsible {
  cursor: pointer;
}

.descriptionEditor {
  background: inherit;
  color: var(--lego-font-color);
}

.registrationDeadlineHours,
.unregistrationDeadlineHours {
  color: var(--secondary-font-color);
  font-size: var(--font-size-sm);
  margin-top: var(--spacing-xs);
}

.poolBox {
  border: 1.5px solid var(--border-gray);
  border-radius: var(--border-radius-lg);
  padding: var(--spacing-sm);
  margin-top: var(--spacing-sm);
}

.metaList {
  display: flex;
  align-items: center;
}

.metaList > ul {
  display: flex;
  flex-wrap: wrap;
  gap: 2%;
}

.metaList > ul > li {
  flex-basis: 100%;
}

.metaList > ul > .poolBox {
  flex-basis: 32%;

  @media (--medium-viewport) {
    flex-basis: 49%;
  }

  @media (--small-viewport) {
    flex-basis: 100%;
  }
}

.metaList > span {
  display: flex;
}

.label {
  cursor: default;
  font-size: var(--font-size-lg);
}

.poolHeader {
  text-align: center;
}

.tagRow {
  margin-top: var(--spacing-md);
}

.addPoolButton {
  display: flex;
  justify-content: center;
  margin-top: var(--spacing-sm);
}

.centeredButton {
  display: flex;
  justify-content: center;
}

.subSection {
  /* Hacky spacing to get the subSection to align with the checkbox */
  margin-top: -2px;
  margin-left: 7px;
  border-left: var(--spacing-xs) solid var(--lego-red-color);
  padding: var(--spacing-sm) 0 0 var(--spacing-md);
}

.imageGallery {
  min-width: 600px;
  word-wrap: break-word;
  white-space: pre-wrap;
  word-break: break-word;

  @media (--small-viewport) {
    min-width: 100%;
  }
}

.imageGalleryEntry {
  width: 90%;
  cursor: pointer;
  border-radius: var(--border-radius-md);

  &:hover {
    opacity: 0.8;
  }

  &:active {
    opacity: 0.65;
  }
}

.groupSuggestionWrapper {
  margin-bottom: var(--spacing-sm);

  > .groupSuggestion {
    cursor: pointer;
    font-size: var(--font-size-xs);

    &.selected {
      background-color: var(--lego-font-color);
      color: var(--inverted-font-color);
    }

    &.implicit {
      cursor: not-allowed;
      background-color: var(--color-gray-4);
      color: var(--inverted-font-color);
    }
  }
}

.feedbackQuestion {
  padding: var(--spacing-sm);
}

/* Improved feedback input row styling */
.feedbackInputRow {
  display: flex;
  align-items: flex-end;
  gap: var(--spacing-md);
  margin-bottom: var(--spacing-sm);
}

/* Type dropdown - keep it compact */
.feedbackInputRow > *:nth-child(1) {
  flex: 0 0 200px;
  min-width: 150px;
}

/* Text input - give it most of the space */
.feedbackInputRow > *:nth-child(2) {
  flex: 1;
}

/* Action buttons - keep them small */
.feedbackInputRow > *:nth-child(n+3) {
  flex: 0 0 auto;
  white-space: nowrap;
}

/* Override for the options row */
.optionsInputRow {
  display: flex;
  align-items: flex-end;
  gap: var(--spacing-md);
  margin-bottom: var(--spacing-sm);
}

.optionsInputRow > *:first-child {
  flex: 1;
}

.optionsInputRow > *:last-child {
  flex: 0 0 auto;
}

.optionItem {
  display: flex;
  align-items: center;
  margin-bottom: var(--spacing-xs);
}

.optionItem > span {
  flex: 1;
  margin-right: var(--spacing-sm);
}

/* Required toggle button */
.requiredButton {
  margin-left: var(--spacing-sm);
  background-color: var(--lego-gray-medium);
  color: var(--white);
  font-size: var(--font-size-sm);
  padding: 0 var(--spacing-xs);
  border-radius: var(--border-radius-sm);
  cursor: pointer;
  transition: background-color 0.2s;
}

.requiredButton.active {
  background-color: var(--lego-red-color);
}

.feedbackOptions {
  margin-top: var(--spacing-sm);
  margin-bottom: var(--spacing-sm);
}

.feedbackOptions h4 {
  margin-bottom: var(--spacing-xs);
  font-weight: 500;
}

.feedbackOptions ul {
  list-style-type: disc;
  margin-left: var(--spacing-md);
}

.feedbackQuestionItem {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--spacing-xs);
  padding: var(--spacing-xs) 0;
}

.feedbackQuestionItem button {
  margin-left: var(--spacing-md);
}

.question {
  flex: 1;
  text-align: left;
  background-color: transparent; 
  padding: var(--spacing-xs) var(--spacing-sm);
  border-radius: var(--border-radius-sm);
}

.questionActions {
  display: flex;
  align-items: center;
  gap: var(--spacing-xs);
}

.questionActions button {
  margin-left: var(--spacing-sm);
  white-space: nowrap;
}

.simpleDropdownExample {
  margin: var(--spacing-md) 0;
  padding: var(--spacing-sm);
  border: 1px dashed var(--border-gray);
  border-radius: var(--border-radius-md);
}
.feedbackQuestionType {
  margin-bottom: var(--spacing-sm);
  width: 30%;
}
.handle {
  cursor: grab;
}

.saveEditButton {
  margin-top: var(--spacing-md);
  background-color: var(--success-color) 
}

.cancelEditButton {
  margin-top: var(--spacing-md);
  background-color: var(--danger-color) 
}

/* Remove the custom tooltip styles as we'll use the standard Tooltip component */
.tooltipContainer,
.tooltip,
.tooltip::after,
.tooltipContainer:hover .tooltip {
  /* Remove these styles */
}